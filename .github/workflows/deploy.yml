name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main  # or the branch you want to trigger the deploy on

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }} # Add your service account key as a GitHub secret, same with next secrets

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build --no-cache --platform linux/amd64 -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/pi-app:latest .

    - name: Push Docker image
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/pi-app:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy pi-app \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/pi-app:latest \
          --platform managed \
          --region europe-west1 \
          --allow-unauthenticated \
          --set-env-vars GITHUB_TOKEN=${{ secrets.GIT_TOKEN }},PIPEDRIVE_API_TOKEN=${{ secrets.PIPEDRIVE_API_TOKEN }},POSTGRES_USER=postgres,POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }},DB_HOST=${{ secrets.DB_HOST }},DB_PORT=5432,POSTGRES_DB=${{ secrets.POSTGRES_DB }}
